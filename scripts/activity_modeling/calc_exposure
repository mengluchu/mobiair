#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Feb 15 17:21:40 2021

@author: menglu
"""
import pandas as pd 
import geopandas as gpd
import numpy as np
import os
from rasterstats import zonal_stats, point_query
import pyproj
from shapely.ops import transform
import modelutils as m
import rasterio
from matplotlib import pyplot as plt
from rasterio.plot import show_hist

                   
def wgs2laea (p):
    wgs84 = pyproj.CRS('EPSG:4326')
    rd= pyproj.CRS('+proj=laea +lat_0=51 +lon_0=9.5 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs')
    project = pyproj.Transformer.from_crs(wgs84, rd, always_xy=True)
    p=transform(project.transform, p)
    return (p)  
src = rasterio.open(f'{preddir}{ls[2]}')
plt.imshow(src.read(1), cmap='pink')
show_hist(src, bins=50, histtype='stepfilled', lw=0.0, stacked=False, alpha=0.3)
#plt.show()
filedir = "/Users/menglu/Documents/GitHub/mobiair/"
preddir =f"{filedir}prediction/"

savedir = "/Volumes/Meng_Mac/mobi_result/Uni/" # each profile a savedir. 

#ls = os.listdir(preddir)


def buffermean(p, ext , rasterfile):
   
    pbuf=p.buffer(ext)
    z= zonal_stats(pbuf, rasterfile, stats = 'mean')[0]['mean']
    return z  

def gethw (df):
    ph=Point(df.home_lon , df.home_lat )
    ph = wgs2laea(ph)
    pw=Point(df.work_lon , df.work_lat )
    pw = wgs2laea(pw)
    return(ph, pw)

def getconcen(act_num, rasterfile, df, routegeom):
    ph, pw = gethw(df)
    return {
       1: point_query(ph, rasterfile ).pop(), #home
       2: np.nan_to_num(np.mean(point_query(routegeom, rasterfile)),0),# can easily make buffer out of it as well, here the ap already 100m so not needed.
       3: point_query(pw, rasterfile ).pop(),
       4: buffermean(p, ext, rasterfile), # will change into to sport (second route)
       5: buffermean(p, ext*5, rasterfile)  ,
       6: buffermean(p, ext*10, rasterfile)   # will change into random walk 
       } [act_num]                                              

Uni_ut_homework = pd.read_csv(filedir +"locationdata/Uni_Ut_homework.csv") # for comparison 
routedir = savedir+'genroute/'
routefile = os.listdir(routedir)[0]

schedir = savedir+'gensche/'
#schefile = os.listdir(schedir)

route= gpd.read_file(routedir+routefile)
route = route.to_crs('+proj=laea +lat_0=51 +lon_0=9.5 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs')
i = 20
ext = 300 # 300 m 
 
sched = pd.read_csv(f'{schedir}ws_iter_1_id_{i}.csv')
start =np.floor(sched['start_time']).astype(int)
end = np.ceil(sched['end_time']).astype(int)
act_num = sched['activity_code']
# rasterfile = f'{preddir}NL100_t{i}.tif'

def remove_none(nparray): 
    arr = np.array(nparray)
    return(arr[arr!= np.array( None)])
'''  
#test
for i in range(1,7):
    getconcen(act_num= i,
              rasterfile=f'{preddir}NL100_t{i}.tif', 
              df = Uni_ut_homework.loc[j], 
              routegeom=route.loc[j]['geometry'])
'''
#still doing hourly
con_each_person=[]
con_each_act=[] 
con_all = [] 
for j in range(len(Uni_ut_homework)):
    for k in range(sched.shape[0]): # iterate over schedule
        for i in range(start[k],end[k]): # iterate over raster
            con_each_act.append(getcon(act_num[k], f'{preddir}NL100_t{i}.tif', Uni_ut_homework.loc[j], route.loc[j]['geometry']))
          
        con_each_person.append(np.nanmean(remove_none(con_each_act[k*i : (k+1)*i ]) ))
    print(j)   
    con_all.append(np.nanmean(remove_none(con_each_act[j*k:(j+1)*k])))
    

con_each_person
      ras = paste0 (rasterpath, "NL100_t",start[act_num]:end[act_num], ".tif")
      st= stack(ras) # this takes quite sometime
      #meanap = calc(st, mean)
      exp = unlist( raster::extract(st, loc))
      mean(exp)* (sched$end_time - sched$start_time)[act_num]
  

.buffer(1)

np.floor(0.11)
np.ceil(0.1)
